/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as DistIndexImport } from './routes/dist/index'
import { Route as FilesFileIdImport } from './routes/files/$file-id'
import { Route as DistSignupImport } from './routes/dist/signup'
import { Route as DistLoginImport } from './routes/dist/login'
import { Route as FilesDistFileIdImport } from './routes/files/dist/$file-id'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DistIndexRoute = DistIndexImport.update({
  id: '/dist/',
  path: '/dist/',
  getParentRoute: () => rootRoute,
} as any)

const FilesFileIdRoute = FilesFileIdImport.update({
  id: '/files/$file-id',
  path: '/files/$file-id',
  getParentRoute: () => rootRoute,
} as any)

const DistSignupRoute = DistSignupImport.update({
  id: '/dist/signup',
  path: '/dist/signup',
  getParentRoute: () => rootRoute,
} as any)

const DistLoginRoute = DistLoginImport.update({
  id: '/dist/login',
  path: '/dist/login',
  getParentRoute: () => rootRoute,
} as any)

const FilesDistFileIdRoute = FilesDistFileIdImport.update({
  id: '/files/dist/$file-id',
  path: '/files/dist/$file-id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/dist/login': {
      id: '/dist/login'
      path: '/dist/login'
      fullPath: '/dist/login'
      preLoaderRoute: typeof DistLoginImport
      parentRoute: typeof rootRoute
    }
    '/dist/signup': {
      id: '/dist/signup'
      path: '/dist/signup'
      fullPath: '/dist/signup'
      preLoaderRoute: typeof DistSignupImport
      parentRoute: typeof rootRoute
    }
    '/files/$file-id': {
      id: '/files/$file-id'
      path: '/files/$file-id'
      fullPath: '/files/$file-id'
      preLoaderRoute: typeof FilesFileIdImport
      parentRoute: typeof rootRoute
    }
    '/dist/': {
      id: '/dist/'
      path: '/dist'
      fullPath: '/dist'
      preLoaderRoute: typeof DistIndexImport
      parentRoute: typeof rootRoute
    }
    '/files/dist/$file-id': {
      id: '/files/dist/$file-id'
      path: '/files/dist/$file-id'
      fullPath: '/files/dist/$file-id'
      preLoaderRoute: typeof FilesDistFileIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dist/login': typeof DistLoginRoute
  '/dist/signup': typeof DistSignupRoute
  '/files/$file-id': typeof FilesFileIdRoute
  '/dist': typeof DistIndexRoute
  '/files/dist/$file-id': typeof FilesDistFileIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dist/login': typeof DistLoginRoute
  '/dist/signup': typeof DistSignupRoute
  '/files/$file-id': typeof FilesFileIdRoute
  '/dist': typeof DistIndexRoute
  '/files/dist/$file-id': typeof FilesDistFileIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dist/login': typeof DistLoginRoute
  '/dist/signup': typeof DistSignupRoute
  '/files/$file-id': typeof FilesFileIdRoute
  '/dist/': typeof DistIndexRoute
  '/files/dist/$file-id': typeof FilesDistFileIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/dist/login'
    | '/dist/signup'
    | '/files/$file-id'
    | '/dist'
    | '/files/dist/$file-id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/dist/login'
    | '/dist/signup'
    | '/files/$file-id'
    | '/dist'
    | '/files/dist/$file-id'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/dist/login'
    | '/dist/signup'
    | '/files/$file-id'
    | '/dist/'
    | '/files/dist/$file-id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  DistLoginRoute: typeof DistLoginRoute
  DistSignupRoute: typeof DistSignupRoute
  FilesFileIdRoute: typeof FilesFileIdRoute
  DistIndexRoute: typeof DistIndexRoute
  FilesDistFileIdRoute: typeof FilesDistFileIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  DistLoginRoute: DistLoginRoute,
  DistSignupRoute: DistSignupRoute,
  FilesFileIdRoute: FilesFileIdRoute,
  DistIndexRoute: DistIndexRoute,
  FilesDistFileIdRoute: FilesDistFileIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/dist/login",
        "/dist/signup",
        "/files/$file-id",
        "/dist/",
        "/files/dist/$file-id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/dist/login": {
      "filePath": "dist/login.js"
    },
    "/dist/signup": {
      "filePath": "dist/signup.js"
    },
    "/files/$file-id": {
      "filePath": "files/$file-id.tsx"
    },
    "/dist/": {
      "filePath": "dist/index.js"
    },
    "/files/dist/$file-id": {
      "filePath": "files/dist/$file-id.js"
    }
  }
}
ROUTE_MANIFEST_END */
